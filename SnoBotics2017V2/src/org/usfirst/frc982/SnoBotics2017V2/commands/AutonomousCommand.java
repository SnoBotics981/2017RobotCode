// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc982.SnoBotics2017V2.commands;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc982.SnoBotics2017V2.Robot;

/**
 *
 */
public class AutonomousCommand extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutonomousCommand() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveSystem);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

	Timer autoTimer; // timer used by the Autonomous Command
	
    // Called just before this Command runs the first time
    protected void initialize() {
    	autoTimer.reset(); // Resets the timer to zero.
    	autoTimer.start(); // Start the timer running.
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.driveSystem.shiftToLow();        // Shift to low speed
    	autoTimer.delay(0.25);                 // Delay 1/4 second to give gear shift operation time
    	Robot.driveSystem.autoDrive(0.5, 0.5); // Drive forward at 1/2 speed
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	return autoTimer.get() > 3.0; // When the timer reaches 3 seconds isFinished will return true
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveSystem.stop(); 
    	Robot.driveSystem.shiftToHigh();
    	autoTimer.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	Robot.driveSystem.stop();
    	Robot.driveSystem.shiftToHigh();
    	autoTimer.stop();
    }
}
