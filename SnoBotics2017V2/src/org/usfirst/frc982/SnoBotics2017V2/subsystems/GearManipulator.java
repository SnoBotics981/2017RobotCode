// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc982.SnoBotics2017V2.subsystems;

import org.usfirst.frc982.SnoBotics2017V2.RobotMap;
import org.usfirst.frc982.SnoBotics2017V2.commands.*;

import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class GearManipulator extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final DoubleSolenoid paddleSolenoid = RobotMap.gearManipulatorPaddleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    /**
     * Here is where I think my problem is from 2/23/17 at the robot room.
     * I had the default command set to CloseGearPaddles. So I'm pretty sure
     * that whenever I exited on of my commands it went back to this command.
     * I think I want to use 'null' as the default command.
     */

    public void initDefaultCommand() {

        // setDefaultCommand(new CloseGearPaddles());

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    public void openPaddles () {
    	paddleSolenoid.set(DoubleSolenoid.Value.kReverse);
    }
    
    public void closePaddles () {
    	paddleSolenoid.set(DoubleSolenoid.Value.kForward);
    }
    
    public boolean isPaddleOpen () {
    	return (paddleSolenoid.get() == (DoubleSolenoid.Value.kReverse));
    }
    
    public boolean isPaddleClosed () {
    	return (paddleSolenoid.get() == (DoubleSolenoid.Value.kForward));
    }
    	
}
