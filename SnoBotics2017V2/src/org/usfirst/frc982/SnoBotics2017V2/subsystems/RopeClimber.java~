// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc982.SnoBotics2017V2.subsystems;

import org.usfirst.frc982.SnoBotics2017V2.RobotMap;
import org.usfirst.frc982.SnoBotics2017V2.commands.*;

import com.ctre.CANTalon;
import com.ctre.CANTalon.TalonControlMode;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class RopeClimber extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon cANTalon9 = RobotMap.ropeClimberCANTalon9;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new ClimbRope());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void setMode (TalonControlMode controlMode) {
    	cANTalon9.changeControlMode(controlMode); // TalonControlMode.Current);
    }
    
    public void setMotorVoltage (double voltage) {
    	if (cANTalon9.getControlMode() == TalonControlMode.PercentVbus) {
    		cANTalon9.set(voltage);
    	} else {
    		cANTalon9.set(0);
    	}
    }
    
    public void setMotorCurrent (double current) {
    	if (cANTalon9.getControlMode() == TalonControlMode.Current) {
    		cANTalon9.set(current);
    	} else {
    		cANTalon9.set(0);
    	}
    }
    
    public double getMotorCurrent () {
    	return cANTalon9.getOutputCurrent();
    }
}

