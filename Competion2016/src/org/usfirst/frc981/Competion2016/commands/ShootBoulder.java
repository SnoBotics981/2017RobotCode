// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc981.Competion2016.commands;

import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc981.Competion2016.Robot;
import org.usfirst.frc981.Competion2016.subsystems.ShooterSubsystem;

/**
 *
 */
public class ShootBoulder extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ShootBoulder() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    
    /*
     * (non-Javadoc)
     * @see edu.wpi.first.wpilibj.command.Command#initialize()
     * Before this command is invoked the command 'SetFlywheelsToShootBall'
     * command should have been invoked to get the flywheels up to speed.
     * If there was a mistake the command for spinning the flywheels will
     * run for at least 0.100 seconds before the robot kicks the ball.
     */
    protected void initialize() {
    	setTimeout(0.10);
    	Robot.shooterSubsystem.setFlywheelSpeed(ShooterSubsystem.SPEED_FOR_SHOOTING);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	return isTimedOut();
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.shooterSubsystem.kickBall();
    	Timer.delay(0.100);
    	Robot.shooterSubsystem.retractKicer();
    	Robot.shooterSubsystem.stopFlywheels();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
